-- DE0_nano_system.vhd

-- Generated using ACDS version 17.1 590

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DE0_nano_system is
	port (
		adc_spi_conduit_MISO             : in    std_logic                     := '0';             --           adc_spi_conduit.MISO
		adc_spi_conduit_MOSI             : out   std_logic;                                        --                          .MOSI
		adc_spi_conduit_SCLK             : out   std_logic;                                        --                          .SCLK
		adc_spi_conduit_SS_n             : out   std_logic;                                        --                          .SS_n
		altpll_sys_c1_clk                : out   std_logic;                                        --             altpll_sys_c1.clk
		altpll_sys_locked_conduit_export : out   std_logic;                                        -- altpll_sys_locked_conduit.export
		clk_clk                          : in    std_logic                     := '0';             --                       clk.clk
		epcs_dclk                        : out   std_logic;                                        --                      epcs.dclk
		epcs_sce                         : out   std_logic;                                        --                          .sce
		epcs_sdo                         : out   std_logic;                                        --                          .sdo
		epcs_data0                       : in    std_logic                     := '0';             --                          .data0
		ext_sensor_irq_export            : in    std_logic                     := '0';             --            ext_sensor_irq.export
		g_sensor_irq_export              : in    std_logic                     := '0';             --              g_sensor_irq.export
		i2c_ext_sda_export               : inout std_logic                     := '0';             --               i2c_ext_sda.export
		i2c_scl_export                   : out   std_logic;                                        --                   i2c_scl.export
		i2c_sda_export                   : inout std_logic                     := '0';             --                   i2c_sda.export
		pio_key_export                   : in    std_logic_vector(1 downto 0)  := (others => '0'); --                   pio_key.export
		pio_leds_export                  : out   std_logic_vector(7 downto 0);                     --                  pio_leds.export
		pio_switch_export                : in    std_logic_vector(3 downto 0)  := (others => '0'); --                pio_switch.export
		reset_reset_n                    : in    std_logic                     := '0';             --                     reset.reset_n
		sdram_wire_addr                  : out   std_logic_vector(12 downto 0);                    --                sdram_wire.addr
		sdram_wire_ba                    : out   std_logic_vector(1 downto 0);                     --                          .ba
		sdram_wire_cas_n                 : out   std_logic;                                        --                          .cas_n
		sdram_wire_cke                   : out   std_logic;                                        --                          .cke
		sdram_wire_cs_n                  : out   std_logic;                                        --                          .cs_n
		sdram_wire_dq                    : inout std_logic_vector(15 downto 0) := (others => '0'); --                          .dq
		sdram_wire_dqm                   : out   std_logic_vector(1 downto 0);                     --                          .dqm
		sdram_wire_ras_n                 : out   std_logic;                                        --                          .ras_n
		sdram_wire_we_n                  : out   std_logic;                                        --                          .we_n
		xbee_rxd                         : in    std_logic                     := '0';             --                      xbee.rxd
		xbee_txd                         : out   std_logic                                         --                          .txd
	);
end entity DE0_nano_system;

architecture rtl of DE0_nano_system is
			begintransfer : in  std_logic                     := 'X';             -- begintransfer
end architecture rtl; -- of DE0_nano_system
